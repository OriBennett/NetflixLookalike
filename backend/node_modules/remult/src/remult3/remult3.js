"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//y1 - number default storage in knex is decimal and it by default has 8,2 - meaning only 999,999 - I think it should be way bigger than that. in firefly we do at least 18 - https://discord.com/channels/975754286384418847/1195162533447876658
//y1 - tried to upgrade vitest, nuxt tests are failing with loading uuid - sounds familiar?
//y2 - from the crm-demo(https://crm-demo.up.railway.app/deals), after editing a deal: - _updateEntityBasedOnApi
//y2 - Backend methods are transactions, it's not intuitive and maybe should be optional / opt in
//y2 - how to run a transaction as a user
//p1 - enum column
//p1 - I think there should be a way to throw a forbidden exception
//p1 - Write some ctrl g
//y2 - get backend methods to work when specifying types for date, and entities as poco's
//y2 - required
//y2 - reconsider validators
//y2 - message for invalid value
//y2 - message for relation that is missing
//p1 - more column types
//p2 -   processError in remult express
//p2 -   allow find options preprocessor for api calls, to use for authorization
//p1 - write doc about controlling updates of rows...
//p1 - need a way to extract the fields from the relation - for generating relation based sql
//p1 - add docs for apply changes
//p1 - when subscribe is forbidden - the query still runs after the renew process
//p1 - 'update tasks set  where id = $1
//y2 - consider multi tenancies
//y2 - allow api read to also support instance and filter. - problem with promise
//p1 - doc this:
/**
 * //p2 - doc this
remult.apiClient.httpClient = (
  input: RequestInfo | URL,
  init?: RequestInit
  ) => {
    return fetch(input, {
      ...init,
      headers: {
        authorization: 'Bearer ' + sessionStorage.sessionId,
      },
      cache: 'no-store',
    })
}

&&
remult.apiClient.url='localhost:3007/api


*/
//p1 - investigate angular starter kit init request error
//p1 - fix angular starter kit await set password
//p1 - fix angular starter kit to latest version as well
//p1 -check if checouknt doesn't respect allow read (I think)
//p1 - fix multiple instances of remult: the defaultRemult and async local hook - and columnsOfType - all can be tests with a vite project loading `remult-admin`
//p1 - crm demo graphql error
//p1 - allow api update only for new rows
//p1 - getFields didn't work for kobi in the home component
//p2 - document validators
//p2 - and validators to reference
//y2 - discuss a default date formatter
//y2 - add some api testing framework for user unit tests (will help with codesandbox based discussions)
//y2 - live query refresh of view on table update
//y2 - livequery for findfirst (@JY)
//y2 - #239 - (@JY) add a way to get from fieldMetadata back to entity repo (like we have in fieldRef)
//p2 - constraints (@JY)
//p2 - type metadata.key - to keyof entity - based on cwis input
//y2 - remove __dirname from tutorials
//p2 - when value changes for field with error, clear error - so the user will feel comfortable
//p2 - conside law-q db based on schema issue - I think that while running the dataProvider function, we should have a valid remult - maybe even have a valid remult, that will be valid until api is run
//y2 - we should really reconsider allow null by default to be true - I think that what we're doing is confusing for most . In my case I added a volunteer relation, and didn't set any value to it - and I get an error that null value is not allowed for it
//p1 - add a follow up doc to the tutorial on how to user a real user table for the users
/**
* our default is allow null false.
* for sql databases we add a db default of 0/''/false
* when we set a relation to null - we update the related field to null
* we do not enforce allow null false (mongo, json it'll get stored)

 */
//p2 - allowApiUpdate should be false for include in api false
//[ ] V2 - what to do about for relations count?
//[ ] V2 - condition? not to fetch if null etc....
//[ ] V3 - all these fields will also appear in the where etc... in the typescript api - but we will not enforce them
//y2 - consider if field types should include validation in them by default (string,number that it's not NaN etc...) and if so, what message?
//y2 - should enforce integer - currently we probably round / truncate it
//p1 - adjust react tutorial to esm
//p1 - write docs on with remult - and usage in init api
